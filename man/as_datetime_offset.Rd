% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/as_datetime_offset.r
\name{as_datetime_offset}
\alias{as_datetime_offset}
\alias{as_datetime_offset.Date}
\alias{as_datetime_offset.default}
\alias{as_datetime_offset.POSIXct}
\alias{as_datetime_offset.POSIXlt}
\alias{as_datetime_offset.character}
\alias{as_datetime_offset.nanotime}
\title{Coerce to "datetime_offset" objects}
\usage{
as_datetime_offset(x, tz = "", ...)

\method{as_datetime_offset}{Date}(x, tz = NA_character_, ...)

\method{as_datetime_offset}{default}(x, tz = lubridate::tz(as.POSIXct(x)), ...)

\method{as_datetime_offset}{POSIXct}(x, tz = lubridate::tz(x), ...)

\method{as_datetime_offset}{POSIXlt}(x, tz = lubridate::tz(x), ...)

\method{as_datetime_offset}{character}(x, tz = NA_character_, ...)

\method{as_datetime_offset}{nanotime}(x, tz = "GMT", ...)
}
\arguments{
\item{x}{An R object that can reasonably be coerced to a \code{\link[=datetime_offset]{datetime_offset()}} object
such as a string in pdfmark date or ISO 8601 datetime formats
or something with an \code{\link[=as.nanotime]{as.nanotime()}} or \code{\link[=as.POSIXct]{as.POSIXct()}} method.}

\item{tz}{Time zone to use for the conversion.
Ignored by \code{as_datetime_offset.Date()}.
Need not be a single value for \code{as_datetime_offset.nanotime()}.}

\item{...}{Further arguments to certain methods.}
}
\description{
\code{as_datetime_offset()} coerces to \code{\link[=datetime_offset]{datetime_offset()}} objects.
}
\examples{
# ISO 8601 examples
as_datetime_offset("2020-05-15")
as_datetime_offset("20200515")
as_datetime_offset("2020-05-15T08:23:16")
as_datetime_offset("20200515T082316")
as_datetime_offset("2020-05-15T08:23:16.003Z")
as_datetime_offset("20200515T082316Z")
as_datetime_offset("2020-05-15T08:23:16+03:30")
as_datetime_offset("20200515T082316+0330")

# Misc supported `as.POSIXlt()` `tryFormats` examples
as_datetime_offset("2020/05/15 08:23:16")

# pdfmark datetime examples
as_datetime_offset("D:20200515")
as_datetime_offset("D:20200515082316")
as_datetime_offset("D:20200515082316+0330")
}
