% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/from_datetime_offset.r
\name{from_datetime_offset}
\alias{from_datetime_offset}
\alias{as.Date.datetime_offset}
\alias{as.nanotime,datetime_offset-method}
\alias{as.POSIXct.datetime_offset}
\alias{as.POSIXlt.datetime_offset}
\title{Convert to other datetime objects}
\usage{
\method{as.Date}{datetime_offset}(x, year = 1970L, month = 1L, day = 1L, ...)

\S4method{as.nanotime}{datetime_offset}(
  from,
  ...,
  year = 1970L,
  month = 1L,
  day = 1L,
  hour = 0L,
  minute = 0L,
  second = 0L,
  nanosecond = 0L,
  tz = ""
)

\method{as.POSIXct}{datetime_offset}(
  x,
  tz = mode_tz(x),
  ...,
  year = 1970L,
  month = 1L,
  day = 1L,
  hour = 0L,
  minute = 0L,
  second = 0L,
  nanosecond = 0L
)

\method{as.POSIXlt}{datetime_offset}(
  x,
  tz = mode_tz(x),
  ...,
  year = 1970L,
  month = 1L,
  day = 1L,
  hour = 0L,
  minute = 0L,
  second = 0L,
  nanosecond = 0L
)
}
\arguments{
\item{x}{A \code{\link[=datetime_offset]{datetime_offset()}} object}

\item{year}{If missing what year to assume}

\item{month}{If missing what month to assume}

\item{day}{If missing what day to assume}

\item{...}{Ignored}

\item{from}{A \code{\link[=datetime_offset]{datetime_offset()}} object}

\item{hour}{If missing what hour to assume}

\item{minute}{If missing what minute to assume}

\item{second}{If missing what second to assume}

\item{nanosecond}{If missing what nanosecond to assume}

\item{tz}{If missing and hour offset also missing what time zone to assume}
}
\description{
We provide methods to convert \code{\link[=datetime_offset]{datetime_offset()}} objects to the following
other R datetime objects:
}
\details{
\itemize{
\item \code{as.Date()} returns the "local" date as a \code{\link[base:Dates]{base::Date()}} object
}
}
\examples{
  as.Date(as_datetime_offset("2020-03-05"))
  as.Date(as_datetime_offset("2020"))
  as.Date(as_datetime_offset("2020"), month = 6, day = 15)

  as.nanotime(as_datetime_offset(Sys.time()))
  as.POSIXct(as_datetime_offset(Sys.time()), tz = "GMT")
}
