% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/invalid.R
\name{datetimeoffset-invalid}
\alias{datetimeoffset-invalid}
\alias{invalid_detect.datetimeoffset}
\alias{invalid_any.datetimeoffset}
\alias{invalid_count.datetimeoffset}
\alias{invalid_remove.datetimeoffset}
\title{Invalid datetimeoffset datetimes}
\usage{
\method{invalid_detect}{datetimeoffset}(x)

\method{invalid_any}{datetimeoffset}(x)

\method{invalid_count}{datetimeoffset}(x)

\method{invalid_remove}{datetimeoffset}(x)
}
\arguments{
\item{x}{A \code{\link[=datetimeoffset]{datetimeoffset()}} object.}
}
\value{
\code{invalid_detect()} and \code{invalid_remove()} return \code{\link[=datetimeoffset]{datetimeoffset()}} vectors.
\code{invalid_count()} returns an integer and \code{invalid_any()} returns a logical value.
}
\description{
\code{invalid_detect()} detects invalid datetimes.
\code{invalid_any()} returns TRUE if any datetimes are invalid.
\code{invalid_count()} returns number of invalid datetimes.
\code{invalid_remove()} removes invalid datetimes.
}
\examples{
# invalid date because April only has 30 days
dts <- c("2019-04-30T03:30:00", "2019-04-31T02:30:00")
dts <- as_datetimeoffset(dts)
clock::invalid_detect(dts)
clock::invalid_any(dts)
clock::invalid_count(dts)
clock::invalid_remove(dts)

if ("America/Los_Angeles" \%in\% OlsonNames()) {
  # non-existent time because of DST "spring forward"
  dt <- as_datetimeoffset("2020-03-08 02:59:59[America/Los_Angeles]")
  clock::invalid_detect(dt)
}

if ("America/New_York" \%in\% OlsonNames()) {
  # incorrect UTC offsets
  dt <- as_datetimeoffset(c("2020-03-08T01:59:59-08[America/New_York]",
                            "2020-03-08T01:59:59-05:30[America/New_York]"))
  clock::invalid_detect(dt)
}
}
